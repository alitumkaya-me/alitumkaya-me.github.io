import type { NextApiRequest, NextApiResponse } from 'next'
import axios from 'axios'

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' })
  }

  const { vision } = req.body

  if (!vision) {
    return res.status(400).json({ error: 'vision data is required' })
  }

  const CLAUDE_API_KEY = process.env.CLAUDE_API_KEY

  // If no API key, return enhanced mock HTML (simulates Claude Sonnet 4.5 output)
  if (!CLAUDE_API_KEY) {
    console.log('‚ö†Ô∏è CLAUDE_API_KEY not found - using mock mode (Claude Sonnet 4.5 simulation)')
    
    const mockCode = `<!DOCTYPE html>
<html lang="tr">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content="AI Generated Landing Page">
  <title>${vision.components?.[1]?.heading?.text || 'Generated Page'} - AI Powered</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }
    @keyframes gradient {
      0%, 100% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
    }
    .animate-fade-in { animation: fadeIn 0.6s ease-out; }
    .animate-gradient { animation: gradient 3s ease infinite; background-size: 200% 200%; }
  </style>
</head>
<body class="bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 min-h-screen text-white">
  
  <!-- Generated by Claude Sonnet 4.5 (Mock Mode) -->
  <!-- Real API will provide production-ready, pixel-perfect code -->
  
  <!-- Navbar -->
  <nav class="fixed top-0 w-full bg-black/60 backdrop-blur-xl border-b border-white/10 z-50">
    <div class="container mx-auto px-6 py-4 flex justify-between items-center">
      <div class="flex items-center gap-3">
        <div class="w-10 h-10 bg-gradient-to-br from-purple-500 to-pink-500 rounded-lg flex items-center justify-center font-bold">
          AI
        </div>
        <span class="text-xl font-bold">${vision.components?.[0]?.items?.[0] || 'Logo'}</span>
      </div>
      <button class="bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white px-6 py-2.5 rounded-lg font-semibold transition transform hover:scale-105">
        ${vision.components?.[1]?.cta?.text || 'Get Started'}
      </button>
    </div>
  </nav>

  <!-- Hero Section -->
  <section class="container mx-auto px-6 pt-32 pb-20 text-center animate-fade-in">
    <div class="max-w-5xl mx-auto">
      <h1 class="text-5xl md:text-7xl font-black mb-6 leading-tight">
        <span class="block mb-2">${vision.components?.[1]?.heading?.text || 'Welcome to'}</span>
        <span class="block bg-gradient-to-r from-purple-400 via-pink-400 to-blue-400 bg-clip-text text-transparent animate-gradient">
          The Future of Development
        </span>
      </h1>
      <p class="text-xl md:text-2xl text-gray-400 mb-10 max-w-3xl mx-auto">
        ${vision.components?.[1]?.subheading?.text || 'Build amazing things with our powerful AI-powered tools'}
      </p>
      <div class="flex flex-col sm:flex-row gap-4 justify-center">
        <button class="bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white px-8 py-4 rounded-xl font-bold text-lg transition transform hover:scale-105 shadow-lg shadow-purple-500/50">
          üöÄ ${vision.components?.[1]?.cta?.text || 'Get Started Free'}
        </button>
        <button class="bg-white/5 hover:bg-white/10 backdrop-blur-sm border border-white/10 text-white px-8 py-4 rounded-xl font-semibold text-lg transition">
          üìñ Learn More
        </button>
      </div>
    </div>
  </section>

  <!-- Features Grid -->
  <section class="container mx-auto px-6 py-20">
    <h2 class="text-4xl md:text-5xl font-black text-center mb-16">
      <span class="bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent">
        Powerful Features
      </span>
    </h2>
    <div class="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-6xl mx-auto">
      ${vision.components?.[2]?.cards?.map((card: any, i: number) => `
        <div class="bg-white/5 backdrop-blur-sm border border-white/10 rounded-2xl p-8 hover:bg-white/10 hover:border-purple-500/50 transition-all duration-300 animate-fade-in" style="animation-delay: ${i * 0.1}s">
          <div class="w-14 h-14 bg-gradient-to-br from-purple-500 to-pink-500 rounded-xl flex items-center justify-center text-2xl mb-4">
            ${card.icon === 'zap' ? '‚ö°' : card.icon === 'shield' ? 'üõ°Ô∏è' : 'üíª'}
          </div>
          <h3 class="text-2xl font-bold mb-3">${card.title || 'Feature'}</h3>
          <p class="text-gray-400 leading-relaxed">${card.body || 'Amazing feature description that will make your life easier'}</p>
        </div>
      `).join('') || `
        <div class="bg-white/5 backdrop-blur-sm border border-white/10 rounded-2xl p-8">
          <div class="w-14 h-14 bg-gradient-to-br from-purple-500 to-pink-500 rounded-xl flex items-center justify-center text-2xl mb-4">‚ö°</div>
          <h3 class="text-2xl font-bold mb-3">Lightning Fast</h3>
          <p class="text-gray-400">Build faster than ever before</p>
        </div>
        <div class="bg-white/5 backdrop-blur-sm border border-white/10 rounded-2xl p-8">
          <div class="w-14 h-14 bg-gradient-to-br from-blue-500 to-purple-500 rounded-xl flex items-center justify-center text-2xl mb-4">üõ°Ô∏è</div>
          <h3 class="text-2xl font-bold mb-3">Secure</h3>
          <p class="text-gray-400">Enterprise-grade security</p>
        </div>
        <div class="bg-white/5 backdrop-blur-sm border border-white/10 rounded-2xl p-8">
          <div class="w-14 h-14 bg-gradient-to-br from-pink-500 to-purple-500 rounded-xl flex items-center justify-center text-2xl mb-4">üíª</div>
          <h3 class="text-2xl font-bold mb-3">Clean Code</h3>
          <p class="text-gray-400">Production-ready output</p>
        </div>
      `}
    </div>
  </section>

  <!-- CTA Section -->
  <section class="container mx-auto px-6 py-20">
    <div class="max-w-4xl mx-auto bg-gradient-to-r from-purple-600/20 via-pink-600/20 to-blue-600/20 backdrop-blur-sm border border-white/10 rounded-3xl p-12 text-center">
      <h2 class="text-4xl md:text-5xl font-black mb-6">
        Ready to Get Started?
      </h2>
      <p class="text-xl text-gray-300 mb-8">
        Join thousands of developers building amazing things
      </p>
      <button class="bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white px-10 py-4 rounded-xl font-bold text-lg transition transform hover:scale-105 shadow-lg shadow-purple-500/50">
        Start Building Now ‚Üí
      </button>
    </div>
  </section>

  <!-- Footer -->
  <footer class="border-t border-white/10 py-12">
    <div class="container mx-auto px-6 text-center text-gray-400">
      <p class="mb-2">¬© 2025 AI Generated. All rights reserved.</p>
      <p class="text-sm">
        Powered by <span class="text-purple-400 font-semibold">Claude Sonnet 4.5</span> (Mock Mode) ‚Ä¢ 
        Add <code class="bg-white/5 px-2 py-1 rounded">CLAUDE_API_KEY</code> for real AI generation
      </p>
    </div>
  </footer>

  <script>
    // Smooth scroll for anchor links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
          target.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }
      });
    });

    // Intersection Observer for scroll animations
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('animate-fade-in');
        }
      });
    }, { threshold: 0.1 });

    document.querySelectorAll('section').forEach(section => observer.observe(section));
  </script>

</body>
</html>`

    return res.status(200).json({ 
      code: mockCode,
      mock: true,
      model: 'claude-sonnet-4.5-mock',
      message: 'Using mock mode. Add CLAUDE_API_KEY to .env.local for real AI code generation.'
    })
  }

  try {
    // Call Claude Sonnet 4.5 API with advanced code generation
    const response = await axios.post(
      'https://api.anthropic.com/v1/messages',
      {
        model: 'claude-sonnet-4.5',
        max_tokens: 8192,
        temperature: 0.2,
        system: 'You are an elite frontend developer powered by Claude Sonnet 4.5. Generate pixel-perfect, production-ready HTML/CSS/JS code with modern best practices, accessibility standards, and optimized performance. Use Tailwind CSS, responsive design, and clean architecture.',
        messages: [
          {
            role: 'user',
            content: `Generate a complete, production-ready HTML page based on this comprehensive UI analysis:

${JSON.stringify(vision, null, 2)}

üéØ REQUIREMENTS:

1. **Framework & Styling:**
   - Tailwind CSS 3.4+ (CDN)
   - Modern CSS Grid and Flexbox
   - CSS variables for theming
   - Smooth animations and transitions

2. **Components:**
   - Implement ALL components from analysis
   - Pixel-perfect spacing and alignment
   - Interactive states (hover, focus, active)
   - Loading states and micro-interactions

3. **Responsive Design:**
   - Mobile-first approach
   - Breakpoints: sm (640px), md (768px), lg (1024px), xl (1280px)
   - Touch-friendly targets (min 44x44px)
   - Fluid typography and spacing

4. **Performance:**
   - Optimized HTML structure
   - Lazy loading for images
   - Minimal DOM elements
   - CSS containment where appropriate

5. **Accessibility:**
   - Semantic HTML5
   - ARIA labels and roles
   - Keyboard navigation
   - Screen reader support
   - WCAG 2.1 AA compliance

6. **Modern Features:**
   - Dark mode support (if applicable)
   - Custom scrollbars
   - Glassmorphism effects
   - Gradient backgrounds
   - Icon integration (Lucide or Heroicons)

7. **Code Quality:**
   - Clean, readable code
   - Commented sections
   - BEM-like naming for custom classes
   - No inline styles (use Tailwind)

üöÄ Generate ONLY the complete HTML code with embedded styles and scripts. No explanations or markdown.`,
          },
        ],
      },
      {
        headers: {
          'x-api-key': CLAUDE_API_KEY,
          'anthropic-version': '2023-06-01',
          'Content-Type': 'application/json',
        },
      }
    )

    const code = response.data.content[0].text
    return res.status(200).json({ code })
  } catch (error: any) {
    console.error('Generate API error:', error.response?.data || error.message)
    return res.status(500).json({ error: 'Code generation failed', details: error.message })
  }
}
